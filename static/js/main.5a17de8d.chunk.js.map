{"version":3,"sources":["AddDialog.js","toolbar.js","genres.js","filterList.js","actions.js","logout.js","NewLogin.js","App.js","index.js"],"names":["AddUserDialog","props","addRow","add","data","id","setData","alertSetter","useState","Class","Title","Link","Categories","Notes","_id","row","setRow","React","open","setOpen","handleClickOpen","handleClose","handleSubmit","axios","post","then","response","console","log","status","objectID","ops","catch","err","handleChange","name","value","target","Tooltip","title","Button","className","onClick","variant","color","size","startIcon","fontSize","aria-label","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","label","type","fullWidth","onChange","multiline","DialogActions","event","prev","map","oldrow","index","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","primary","main","backgroundColor","lighten","light","text","secondary","dark","flex","search","position","right","Genres","values","useStyles","formControl","display","selectEmpty","marginTop","Select","maxwidth","SelectColumnFilter","column","filterValue","setFilter","preFilteredRows","classes","options","useMemo","Set","forEach","FormControl","defaultValue","e","undefined","MenuItem","option","i","Actions","removeRow","Logout","loginUser","credentials","a","fetch","method","headers","body","JSON","stringify","json","NewLogin","setToken","username","setUserName","password","setPassword","preventDefault","token","onSubmit","App","show","message","showAlert","setShowAlert","showValue","typeValue","msgValue","window","confirm","currentTarget","result","newArray","filter","elem","newRow","concat","useEffect","timeId","setTimeout","clearTimeout","Header","columns","accessor","Filter","Cell","cell","href","path","ReactDOM","render","document","getElementById"],"mappings":"8hBAqKeA,EAzJO,SAAAC,GAAU,IACpBC,EAAgDD,EAAhDC,OAAQC,EAAwCF,EAAxCE,IAAKC,EAAmCH,EAAnCG,KAAMC,EAA6BJ,EAA7BI,GAAIC,EAAyBL,EAAzBK,QAASC,EAAgBN,EAAhBM,YADb,EA0BLC,mBAtBdL,EACO,CACHM,MAAO,GACPC,MAAO,GACPC,KAAM,GACNC,WAAY,GACZC,MAAO,IAKJ,CACHJ,MAAOL,EAAKC,GAAII,MAChBC,MAAON,EAAKC,GAAIK,MAChBC,KAAMP,EAAKC,GAAIM,KACfC,WAAYR,EAAKC,GAAIO,WACrBC,MAAOT,EAAKC,GAAIQ,MAChBC,IAAKV,EAAKC,GAAIS,MArBC,mBA0BpBC,EA1BoB,KA0BfC,EA1Be,OA2BHC,IAAMT,UAAS,GA3BZ,mBA2BpBU,EA3BoB,KA2BdC,EA3Bc,KA6BrBC,EAAkB,WACpBD,GAAQ,IAGNE,EAAc,WAChBF,GAAQ,IAUNG,EAAe,SAAAP,GAEjBQ,IAAMC,KAAK,sDAAuDT,GAC7DU,MAAK,SAACC,GACHC,QAAQC,IAAI,YAAaF,EAASG,QAClC,IAAIC,EAAWJ,EAAStB,KAAK2B,IAAI,GAAGjB,IAEpCC,EAAID,IAAMgB,EAEV5B,EAAOa,MAEViB,OAAM,SAACC,GACJN,QAAQC,IAAIK,GACZ1B,GAAY,EAAM,QAAS,yBAKjC2B,EAAe,SAAAC,GAAI,OAAI,YAA4B,IAAfC,EAAc,EAAxBC,OAAUD,MACtCpB,EAAO,2BAAKD,GAAN,kBAAYoB,EAAOC,OAgC7B,OACI,gCACKjC,EACG,cAACmC,EAAA,EAAD,CAASC,MAAM,MAAf,SACI,cAACC,EAAA,EAAD,CAAQC,UAAU,cAAcC,QAAStB,EAAiBuB,QAAQ,WAAWC,MAAM,UAAUC,KAAK,QAAQC,UAAW,cAAC,IAAD,CAAsBC,SAAS,UAApJ,wBAKJ,cAACT,EAAA,EAAD,CAASC,MAAM,OAAf,SACI,cAACC,EAAA,EAAD,CAAQQ,aAAW,OAAON,QAAStB,EAAiBuB,QAAQ,WAAWC,MAAM,YAA7E,SACI,cAAC,IAAD,QAMZ,eAACK,EAAA,EAAD,CAAQ/B,KAAMA,EAAMgC,QAAS7B,EAAa8B,kBAAgB,oBAA1D,UACI,cAACC,EAAA,EAAD,CAAa/C,GAAG,oBAAhB,SAAqCF,EAAM,mBAAqB,kBAChE,eAACkD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,WAAS,EAACC,OAAO,QAAQC,MAAM,QAAQC,KAAK,OAAOC,WAAS,EACnEvB,MAAOrB,EAAIN,MACXmD,SAAU1B,EAAa,WAG3B,cAACoB,EAAA,EAAD,CAAWE,OAAO,QAAQC,MAAM,QAAQC,KAAK,OAAOC,WAAS,EAACvB,MAAOrB,EAAIL,MAAOkD,SAAU1B,EAAa,WAEvG,cAACoB,EAAA,EAAD,CAAWE,OAAO,QAAQC,MAAM,QAAQC,KAAK,OAAOC,WAAS,EAACvB,MAAOrB,EAAIF,MAAO+C,SAAU1B,EAAa,SAAU2B,WAAS,IAE1H,cAACP,EAAA,EAAD,CAAWE,OAAO,QAAQC,MAAM,OAAOC,KAAK,OAAOC,WAAS,EAACvB,MAAOrB,EAAIJ,KAAMiD,SAAU1B,EAAa,UAErG,cAACoB,EAAA,EAAD,CAAWE,OAAO,QAAQC,MAAM,aAAaC,KAAK,OAAOC,WAAS,EAACvB,MAAOrB,EAAIH,WAAYgD,SAAU1B,EAAa,mBAGrH,eAAC4B,EAAA,EAAD,WACI,cAACtB,EAAA,EAAD,CAAQE,QAASrB,EAAauB,MAAM,UAApC,oBAGCzC,EACG,cAACqC,EAAA,EAAD,CAAQE,QAjGV,SAAAqB,GACd1C,IACAC,EAAaP,IA+F+B6B,MAAM,UAAlC,kBAIA,cAACJ,EAAA,EAAD,CAAQE,QAxEL,SAAAqB,GACnB1C,IACAf,GAAQ,SAAC0D,GAAD,OACJA,EAAKC,KAAI,SAAkBC,EAAQC,GAC/B,OAAIA,IAAU9D,EACH,eACA2D,EAAKG,GAASpD,GAGlBmD,QAIf3C,IAAMC,KAAK,yDAA0DT,GAChEU,MAAK,SAACC,GACHC,QAAQC,IAAI,eAAgBF,EAASG,OAAQH,GACtB,KAAnBA,EAASG,OACTtB,GAAY,EAAM,UAAW,8BAE7BA,GAAY,EAAM,QAAS,0BAGlCyB,OAAM,SAACC,GACJN,QAAQC,IAAIK,GACZ1B,GAAY,EAAM,QAAS,2BAgDcqC,MAAM,UAAvC,4B,sECrICwB,aAAW,SAAAC,GAAK,MAAK,CAC1CC,KAAM,CACFC,YAAaF,EAAMG,QAAQ,GAC3BC,aAAcJ,EAAMG,QAAQ,IAEhCE,UAC2B,UAAvBL,EAAMM,QAAQjB,KACV,CACId,MAAOyB,EAAMM,QAAQC,QAAQC,KAC7BC,gBAAiBC,YAAQV,EAAMM,QAAQC,QAAQI,MAAO,MAG1D,CACIpC,MAAOyB,EAAMM,QAAQM,KAAKL,QAC1BE,gBAAiBT,EAAMM,QAAQO,UAAUC,MAErD5C,MAAO,CACH6C,KAAM,YAEVC,OAAQ,CACJC,SAAU,WACVC,MAAO,WCpCf,IAUeC,EAVA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACd,OACI,mCACI,sBAAMhD,UAAWgD,EAAS,QAAU,GAApC,SACKA,O,yDCEXC,EAAYtB,aAAW,SAACC,GAAD,MAAY,CACrCsB,YAAa,CACTnC,OAAQa,EAAMG,QAAQ,GACtBoB,QAAS,QAEbC,YAAa,CACTC,UAAWzB,EAAMG,QAAQ,IAE7BuB,OAAQ,CACJC,SAAU,QA+CHC,MAxCf,YAEI,IAAD,IADCC,OAAUC,EACX,EADWA,YAAaC,EACxB,EADwBA,UAAWC,EACnC,EADmCA,gBAAiBhG,EACpD,EADoDA,GAG7CiG,EAAUZ,IAIVa,EAAUtF,IAAMuF,SAAQ,WAC1B,IAAMD,EAAU,IAAIE,IAKpB,OAHAJ,EAAgBK,SAAQ,SAAA3F,GACpBwF,EAAQpG,IAAIY,EAAI0E,OAAOpF,OAEpB,YAAIkG,EAAQd,YACpB,CAACpF,EAAIgG,IAGR,OACI,cAACM,EAAA,EAAD,CAAalE,UAAW6D,EAAQX,YAAhC,SACI,eAACI,EAAA,EAAD,CAAQtD,UAAW6D,EAAQP,OAEvB3D,MAAO+D,EACPS,aAAa,YACbhD,SAAU,SAAAiD,GACNT,EAAUS,EAAExE,OAAOD,YAAS0E,IALpC,UAQI,cAACC,EAAA,EAAD,CAAUH,aAAa,GAAvB,iBAECL,EAAQtC,KAAI,SAAC+C,EAAQC,GAAT,OACT,cAACF,EAAA,EAAD,CAAkB3E,MAAO4E,EAAzB,SACKA,GADUC,Y,wBChCpBC,MAhBf,YAAgF,IAA7D9E,EAA4D,EAA5DA,MAAO+E,EAAqD,EAArDA,UAAWjH,EAA0C,EAA1CA,OAAQE,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,YAC5D,OACI,mCACI,sBAAKkC,UAAU,UAAf,UACI,cAAC,EAAD,CAAetC,KAAK,EAAOD,OAAQA,EAAQE,KAAMA,EAAMC,GAAIA,EAAIC,QAASA,EAASC,YAAaA,IAE9F,cAAC+B,EAAA,EAAD,CAASC,MAAM,SAAf,SACI,cAACC,EAAA,EAAD,CAAQJ,MAAOA,EAAOM,QAASyE,EAAWxE,QAAQ,WAAWC,MAAM,UAAnE,SACI,cAAC,IAAD,c,cCOTwE,I,wBClBAC,E,8EAAf,WAAyBC,GAAzB,SAAAC,EAAA,+EACWC,MAAM,oDAAqD,CAC9DC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,KAEpB7F,MAAK,SAAArB,GAAI,OAAIA,EAAK0H,WAR3B,4C,sBAWe,SAASC,EAAT,GAAiC,IAAbC,EAAY,EAAZA,SAAY,EACXxH,qBADW,mBACpCyH,EADoC,KAC1BC,EAD0B,OAEX1H,qBAFW,mBAEpC2H,EAFoC,KAE1BC,EAF0B,KAIrC9G,EAAY,uCAAG,WAAMuF,GAAN,eAAAU,EAAA,6DACjBV,EAAEwB,iBADe,SAEGhB,EAAU,CAC1BY,WACAE,aAJa,OAEXG,EAFW,OAOjBN,EAASM,GAPQ,2CAAH,sDAUlB,OACI,sBAAK7F,UAAU,gBAAf,UACI,+CACA,uBAAM8F,SAAUjH,EAAhB,UACI,kCACI,yCACA,uBAAOoC,KAAK,OAAOE,SAAU,SAAAiD,GAAC,OAAIqB,EAAYrB,EAAExE,OAAOD,aAE3D,kCACI,yCACA,uBAAOsB,KAAK,WAAWE,SAAU,SAAAiD,GAAC,OAAIuB,EAAYvB,EAAExE,OAAOD,aAE/D,8BACI,wBAAQsB,KAAK,SAAb,4BCsJL8E,MAhLf,WAAe,MAGWhI,mBAAS,IAHpB,mBAGNJ,EAHM,KAGAE,EAHA,OAMqBE,mBAAS,CACzCiI,MAAM,EACN/E,KAAM,GACNgF,QAAS,KATE,mBAMNC,EANM,KAMKC,EANL,KAYb,SAASrI,EAAYsI,EAAWC,EAAWC,GACzCH,EAAa,CACXH,KAAMI,EACNnF,KAAMoF,EACNJ,QAASK,IAoBb,SAAS5B,EAAUN,GAEjB,GADAA,EAAEwB,iBACEW,OAAOC,QAAQ,yCAA0C,CAC3D,GAAIpC,EAAEqC,cAAc9G,MAAO,CACzB,IAAI/B,EAAK,OAASwG,EAAEqC,cAAc9G,MAClCb,IAAMC,KAAK,yDAA0DnB,GAAIoB,MAAK,SAAC0H,GACxD,KAAjBA,EAAOtH,QACTtB,GAAY,EAAM,UAAW,0BAC7BoB,QAAQC,IAAI,gBAAiBuH,EAAOtH,SAEpCtB,GAAY,EAAM,QAAS,2BAMjC,IAAI6I,EAAWhJ,EAAKiJ,QAAO,SAAAC,GAAI,OAC7BA,EAAKxI,KAAO+F,EAAEqC,cAAc9G,SAE9B9B,EAAQ8I,IAKZ,SAASlJ,EAAOqJ,GACdjJ,GAAQ,SAAA0D,GAAI,OAAIA,EAAKwF,OAAOD,MAC5BhJ,GAAY,EAAM,UAAW,uBAzC/BkJ,qBAAU,WACR,GAAsB,GAAlBd,EAAUF,KAAc,CAC1B,IAAMiB,EAASC,YAAW,WAExBpJ,GAAY,KACX,KAEH,OAAO,WACLqJ,aAAaF,QAqDHlD,mBAAQ,iBAAM,CAC5B,CACEqD,OAAQ,IAERC,QAAS,CAOP,CACED,OAAQ,GACRE,SAAU,QACVC,OAAQ/D,EACRoD,OAAQ,YAEV,CACEQ,OAAQ,QACRE,SAAU,QACVC,OAAQ,GACRX,OAAQ,YAEV,CACEQ,OAAQ,QACRE,SAAU,QACVC,OAAQ,GACRX,OAAQ,YAEV,CACEQ,OAAQ,OACRE,SAAU,OACVE,KAAM,gBAAW7H,EAAX,EAAG8H,KAAQ9H,MAAX,OACJ,cAACI,EAAA,EAAD,CAAQ2H,KAAM/H,EAAOC,OAAO,SAASM,QAAQ,WAAWC,MAAM,UAA9D,SACE,cAAC,IAAD,OAEJoH,OAAQ,GACRX,OAAQ,YAEV,CACEQ,OAAQ,GACRE,SAAU,aAEVE,KAAM,gBAAW7H,EAAX,EAAG8H,KAAQ9H,MAAX,OAAyB,cAAC,EAAD,CAAQqD,OAAQrD,KAC/C4H,OAAQ/D,EACRoD,OAAQ,YAEV,CACEQ,OAAQ,UACRE,SAAU,MACVE,KAAM,oBAAGC,KAAQ9H,EAAX,EAAWA,MAAOrB,EAAlB,EAAkBA,IAAlB,OAA8B,cAAC,EAAD,CAASqB,MAAOA,EAAO+E,UAAWA,EAAWjH,OAAQA,EAAQE,KAAMA,EAAMC,GAAIU,EAAIoD,MAAO7D,QAASA,EAASC,YAAaA,KAC3JyJ,OAAQ,GACRX,OAAQ,iBAIb,CAACjJ,IAGJqJ,qBAAU,WAAO,sBAAC,4BAAAlC,EAAA,sEACKhG,IAAM,uDADX,OACV4H,EADU,OAEd7I,EAAQ6I,EAAO/I,MAFD,0CAAD,KAId,IAjJU,MAmJaI,qBAnJb,mBAmJN8H,EAnJM,KAmJCN,EAnJD,KAqJb,OAAKM,EAWH,cANA,CAMA,OAAK7F,UAAU,MAAf,UACE,6CACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2H,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,cAlBD,cAAC,EAAD,CAAUpC,SAAUA,KC7J/BqC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.5a17de8d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport axios from 'axios'\n\nconst AddUserDialog = props => {\n    const { addRow, add, data, id, setData, alertSetter } = props\n    const initialRow = () => {\n        // creates blank fields to add new document\n        if (add) {\n            return {\n                Class: '',\n                Title: '',\n                Link: '',\n                Categories: '',\n                Notes: '',\n                // _id: ''\n            }\n        } else {\n        // populates the dialog with the document's data\n            return {\n                Class: data[id].Class,\n                Title: data[id].Title,\n                Link: data[id].Link,\n                Categories: data[id].Categories,\n                Notes: data[id].Notes,\n                _id: data[id]._id\n            }\n        }\n    }\n    \n    const [row, setRow] = useState(initialRow())\n    const [open, setOpen] = React.useState(false)\n  \n    const handleClickOpen = () => {\n        setOpen(true)\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const handleAdd = event => {\n        handleClose()\n        handleSubmit(row)\n    }\n\n    \n    // when adding a new document to the state and DB\n    const handleSubmit = row => {\n        \n        axios.post('https://stark-anchorage-94670.herokuapp.com/addData', row)\n            .then((response) => {\n                console.log(\"Add Data:\", response.status)\n                let objectID = response.data.ops[0]._id\n                // add ID field to state\n                row._id = objectID\n                // add row to table state (handles alerts)\n                addRow(row)\n            })\n            .catch((err) => {\n                console.log(err)\n                alertSetter(true, \"error\", \"Error adding data\")\n            })\n    }\n\n    // when updating an existing document in the state and DB\n    const handleChange = name => ({ target: { value } }) => {\n        setRow({ ...row, [name]: value })\n    }\n\n    const handleEditSave = event => {\n        handleClose()\n        setData((prev) =>\n            prev.map(function callback(oldrow, index) {\n                if (index === id) {\n                    return {\n                        ...prev[index] = row,\n                    };\n                }\n                return oldrow;\n            })\n        );\n\n        axios.post('https://stark-anchorage-94670.herokuapp.com/updateData', row)\n            .then((response) => {\n                console.log(\"Update Data:\", response.status, response)\n                if (response.status == 200) {\n                    alertSetter(true, \"success\", \"Data successfully updated!\")\n                } else {\n                    alertSetter(true, \"error\", \"Error updating data\")\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n                alertSetter(true, \"error\", \"Error updating data\")\n            })\n    }\n  \n    \n    return (\n        <div>\n            {add ? (\n                <Tooltip title=\"Add\">\n                    <Button className=\"addDataForm\" onClick={handleClickOpen} variant=\"outlined\" color=\"primary\" size=\"large\" startIcon={<AddCircleOutlineIcon fontSize=\"large\"/>}>\n                        Document\n                        </Button>\n                </Tooltip>\n            ) : (\n                <Tooltip title=\"Edit\">\n                    <Button aria-label=\"edit\" onClick={handleClickOpen} variant=\"outlined\" color=\"secondary\">\n                        <EditIcon />\n                    </Button>\n                </Tooltip>\n                )\n            }\n\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">{add? (\"Add New Document\"):(\"Edit Document\")}</DialogTitle>\n                <DialogContent>\n                    <TextField autoFocus margin=\"dense\" label=\"Class\" type=\"text\" fullWidth\n                        value={row.Class} // displays value from state\n                        onChange={handleChange('Class')} //sets state's field with value entered  e.g. setRow(row.class: value) \n                    />\n                    \n                    <TextField margin=\"dense\" label=\"Title\" type=\"text\" fullWidth value={row.Title} onChange={handleChange('Title')} />\n                    \n                    <TextField margin=\"dense\" label=\"Notes\" type=\"text\" fullWidth value={row.Notes} onChange={handleChange('Notes')} multiline />\n                    \n                    <TextField margin=\"dense\" label=\"Link\" type=\"text\" fullWidth value={row.Link} onChange={handleChange('Link')} />\n                    \n                    <TextField margin=\"dense\" label=\"Categories\" type=\"text\" fullWidth value={row.Categories} onChange={handleChange('Categories')} />\n                </DialogContent>\n\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    {add ? (\n                        <Button onClick={handleAdd} color=\"primary\">\n                            Save\n                        </Button>\n                    ) : (\n                        <Button onClick={handleEditSave} color=\"primary\">\n                            Save\n                        </Button>)}\n\n                    \n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nAddUserDialog.propTypes = {\n    // addUserHandler: PropTypes.func.isRequired,\n}\n\nexport default AddUserDialog\n","import React from 'react'\nimport AddUserDialog from './AddDialog'\nimport clsx from 'clsx'\nimport DeleteIcon from '@material-ui/icons/Delete'\n// import GlobalFilter from './GlobalFilter'\nimport IconButton from '@material-ui/core/IconButton'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport SendIcon from '@material-ui/icons/Send';\nimport TextField from '@material-ui/core/TextField';\nimport { RiShareForwardFill } from 'react-icons/ri'\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light' ?\n            {\n                color: theme.palette.primary.main,\n                backgroundColor: lighten(theme.palette.primary.light, 0.85),\n            }\n            :\n            {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n    search: {\n        position: \"absolute\",\n        right: \"0px\"\n    }\n}))\n\nconst TableToolbar = props => {\n    const classes = useToolbarStyles()\n\n    const {\n        numSelected,\n        deleteUserHandler,\n        selectedRows,\n        addRow,\n        rows,\n        handleFilterChange,\n        filterInput,\n        alertSetter\n    } = props\n\n    return (\n        <Toolbar className={clsx(classes.root, {[classes.highlight]: numSelected > 0})}>\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n                    {numSelected} items selected\n                </Typography>\n            ) : (\n                <>\n                    <AddUserDialog addRow={addRow} add={true} alertSetter={alertSetter} />\n                        \n                    <TextField\n                        id=\"outlined-search\"\n                        label={`Search ${rows.length} records...`}\n                        type=\"search\"\n                        variant=\"outlined\"\n                        name=\"searchField\"\n                        className={clsx(classes.search)}\n                        value={filterInput}\n                        onChange={handleFilterChange}\n                    />    \n                </>\n                )}\n\n            {numSelected > 0 ? (\n                <>\n                    <Tooltip title=\"Delete\">\n                        <IconButton aria-label=\"delete\" onClick={deleteUserHandler}> \n                            <DeleteIcon color=\"secondary\"/>\n                        </IconButton>\n                    </Tooltip>\n                    \n                    <Tooltip title=\"Share\">\n\n                            <IconButton aria-label=\"share\" > \n                            <RiShareForwardFill color=\"#3F50B5\"/>\n                            </IconButton>\n\n                    </Tooltip>\n                    {console.log(\"selectedRows\",selectedRows)}\n                </>\n            ) : (null)}\n        </Toolbar>\n    )\n}\n\nTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    deleteUserHandler: PropTypes.func.isRequired,\n}\n\nexport default TableToolbar\n","import React from 'react'\n\nconst Genres = ({ values }) => {\n    return (\n        <>\n            <span className={values ? \"badge\" : \"\"}>\n                {values}\n            </span>\n        </>\n    )\n}\n\nexport default Genres","import React from 'react'\nimport { useFilters, useGlobalFilter } from 'react-table'\nimport { makeStyles } from '@material-ui/core/styles';\nimport './filterList.css'\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        display: 'flex',\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    Select: {\n        maxwidth: 20,\n    }\n}));\n\n\n// This is a custom filter UI for selecting\n// a unique option from a list\nfunction SelectColumnFilter({\n    column: { filterValue, setFilter, preFilteredRows, id },\n}) {\n\n    const classes = useStyles();\n\n    // Calculate the options for filtering\n    // using the preFilteredRows\n    const options = React.useMemo(() => {\n        const options = new Set()\n\n        preFilteredRows.forEach(row => {\n            options.add(row.values[id])\n        })\n        return [...options.values()]\n    }, [id, preFilteredRows])\n\n    // Render a multi-select box\n    return (\n        <FormControl className={classes.formControl}>\n            <Select className={classes.Select}\n                // className={classes.Select}\n                value={filterValue}\n                defaultValue=\"undefined\"\n                onChange={e => {\n                    setFilter(e.target.value || undefined)\n                }}\n            >\n                <MenuItem defaultValue=\"\">All</MenuItem>\n\n                {options.map((option, i) => (\n                    <MenuItem key={i} value={option}>\n                        {option}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    )\n}\n\nexport default SelectColumnFilter","import React from 'react'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddUserDialog from './AddDialog'\nimport Button from '@material-ui/core/Button'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport './actions.css'\n\nfunction Actions({ value, removeRow, addRow, data, id, setData, alertSetter }) {\n    return (\n        <>\n            <div className=\"actions\">\n                <AddUserDialog add={false} addRow={addRow} data={data} id={id} setData={setData} alertSetter={alertSetter}/>\n                \n                <Tooltip title=\"Delete\">\n                    <Button value={value} onClick={removeRow} variant=\"outlined\" color=\"primary\">\n                        <DeleteIcon/>\n                    </Button>\n                </Tooltip>\n            </div>\n        </> \n    )\n}\n\nexport default Actions","import React from 'react';\nimport { GoogleLogout } from 'react-google-login';\n\nconst clientId ='523316769207-lchoooe18tfv5p2ece8fdns1seld9tqo.apps.googleusercontent.com';\n\nfunction Logout() {\n    const onSuccess = () => {\n        console.log('Logout successful');\n        alert('Logout successful');\n    };\n\n    return (\n        <div>\n            <GoogleLogout\n                clientId={clientId}\n                buttonText=\"Logout\"\n                onLogoutSuccess={onSuccess}\n            ></GoogleLogout>\n        </div>\n    );\n}\n\nexport default Logout;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewLogin.css';\n\nasync function loginUser(credentials) {\n    return fetch('https://stark-anchorage-94670.herokuapp.com/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n    })\n        .then(data => data.json())\n}\n\nexport default function NewLogin({ setToken }) {\n    const [username, setUserName] = useState();\n    const [password, setPassword] = useState();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const token = await loginUser({\n            username,\n            password\n        });\n\n        setToken(token);\n    }\n\n    return (\n        <div className=\"login-wrapper\">\n            <h1>Please Log In</h1>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    <p>Username</p>\n                    <input type=\"text\" onChange={e => setUserName(e.target.value)}/>\n                </label>\n                <label>\n                    <p>Password</p>\n                    <input type=\"password\" onChange={e => setPassword(e.target.value)}/>\n                </label>\n                <div>\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nNewLogin.propTypes = {\n    setToken: PropTypes.func.isRequired\n}","import './App.css';\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport Table from \"./Table\"\nimport axios from 'axios';\nimport Genres from './genres'\nimport Button from '@material-ui/core/Button';\nimport ShowAlert from './showAlert'\nimport SelectColumnFilter from './filterList'\nimport LinkIcon from '@material-ui/icons/Link';\nimport Actions from './actions'\nimport Main from './main'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './login';\nimport Logout from './logout';\nimport NewLogin from './NewLogin'\n\nfunction App() {\n  \n  // data array stores the data from the DB\n  const [data, setData] = useState([])\n\n  // state for showing alerts\n  const [showAlert, setShowAlert] = useState({\n    show: false,\n    type: \"\",\n    message: \"\"\n  })\n\n  function alertSetter(showValue, typeValue, msgValue) {\n    setShowAlert({\n      show: showValue,\n      type: typeValue,\n      message: msgValue\n    }) \n  }\n\n  // autoclose alerts\n  useEffect(() => {\n    if (showAlert.show == true) {\n      const timeId = setTimeout(() => {\n        // After 2 seconds set the show value to false\n        alertSetter(false)\n      }, 2000)\n\n      return () => {\n        clearTimeout(timeId)\n      }\n    }\n  });\n  \n  \n  // removes one document from the database and the table state\n  function removeRow(e) {\n    e.preventDefault();\n    if (window.confirm('Are you sure you wish to delete this?')) {\n      if (e.currentTarget.value) {\n        let id = \"_id=\" + e.currentTarget.value\n        axios.post('https://stark-anchorage-94670.herokuapp.com/deleteData', id).then((result) => {\n          if (result.status == 200) {\n            alertSetter(true, \"success\", \"Success deleting item!\")\n            console.log(\"Remove Data: \", result.status)\n          } else {\n            alertSetter(true, \"error\", \"Error deleting item!\")\n          }\n        });\n      }\n\n      // remove row from the data state\n      let newArray = data.filter(elem =>\n        elem._id != e.currentTarget.value\n      )\n      setData(newArray)\n    }\n  }\n\n  // add new document to table state\n  function addRow(newRow) {\n    setData(prev => prev.concat(newRow))\n    alertSetter(true, \"success\", \"Success adding row!\")\n  }\n  \n  // not in use: inline editing of cells\n  const updateMyData = (rowIndex, columnId, value) => {\n    e.preventDefault();\n    setData((prev) =>\n      prev.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...prev[rowIndex],\n            [columnId]: value,\n          };\n        }\n        return row;\n      })\n    );\n  };\n\n  // prepares the headers of the table\n  const columns = useMemo(() => [\n    {\n      Header: \" \", // don't know how to get rid of this header\n\n      columns: [\n        // {\n        //   Header: \"Row #\",\n        //   Cell: ({ row }) => <span>{row.index}</span>,\n        //   Filter: \"\",\n        //   filter: 'includes',\n        // },\n        {\n          Header: \"\",\n          accessor: \"Class\",\n          Filter: SelectColumnFilter,\n          filter: 'includes',\n        },\n        {\n          Header: \"Title\",\n          accessor: \"Title\",\n          Filter: \"\",\n          filter: 'includes',\n        },\n        {\n          Header: \"Notes\",\n          accessor: \"Notes\",\n          Filter: \"\",\n          filter: 'includes',\n        },\n        {\n          Header: \"Link\",\n          accessor: \"Link\",\n          Cell: ({ cell: { value } }) =>\n            <Button href={value} target=\"_blank\" variant=\"outlined\" color=\"primary\">\n              <LinkIcon />\n            </Button>,\n          Filter: \"\",\n          filter: 'includes',\n        },\n        {\n          Header: \"\",\n          accessor: \"Categories\",\n          // Cell method will provide the cell value; we pass it to render a custom component\n          Cell: ({ cell: { value } }) => <Genres values={value} />,\n          Filter: SelectColumnFilter,\n          filter: 'includes',\n        },\n        {\n          Header: \"Actions\",\n          accessor: \"_id\",\n          Cell: ({ cell: { value, row } }) => <Actions value={value} removeRow={removeRow} addRow={addRow} data={data} id={row.index} setData={setData} alertSetter={alertSetter}/>,\n          Filter: \"\",\n          filter: 'excludes',\n        },\n      ]\n    }\n  ], [data])\n\n  // Get all data from DB and add it to the state \n  useEffect(() => {(async () => {\n    const result = await axios(\"https://stark-anchorage-94670.herokuapp.com/getData\")\n      setData(result.data)\n    })()\n  }, [])\n\n  const [token, setToken] = useState();\n\n  if (!token) {\n    return <NewLogin setToken={setToken} />\n  }\n\n  return (\n    // <div className=\"App\">\n    //   <Main />\n    //   <ShowAlert state={showAlert} setter={alertSetter} dog={\"hello\"}/>\n    //   <Table columns={columns} data={data} updateMyData={updateMyData} setData={setData} setShowAlert={setShowAlert} addRow={addRow} alertSetter={alertSetter} />\n    // </div>\n\n    <div className=\"App\">\n      <h1>Application</h1>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/login\">\n            <NewLogin />\n          </Route>\n          <Route path=\"/logout\">\n            <NewLogin />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { render } from 'react-dom'\nimport Login from './login';\nimport Logout from './logout';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// const Root = () => (\n//   <>\n//     {/* <Login /> */}\n//     <App />\n//     {/* <Logout /> */}\n//   </>\n// )\n// render(\n//   <Root />, document.getElementById('root')\n// )\n"],"sourceRoot":""}